// server.js (ESM)
import express from "express";
import dotenv from "dotenv";
import cors from "cors";
import morgan from "morgan";
import colors from "colors";
import helmet from "helmet";
import rateLimit from "express-rate-limit";
import connectDB from "./config/db.js";

import { notFound, errorHandler } from "./middleware/errorMiddleware.js";
import { protect } from "./middleware/authMiddleware.js";
// import { ensureCompany } from "./middleware/companyContext.js";

import authRoutes from "./routes/authRoutes.js";
import bookingRoutes from "./routes/bookingRoutes.js";
import inquiryRoutes from "./routes/inquiryRoutes.js";
import agentRoutes from "./routes/agentRoutes.js";
import analyticsRoutes from "./routes/analyticsRoutes.js";
// import pdfRoutes from "./routes/pdfRoutes.js";
dotenv.config();
connectDB();

const app = express();
app.disable("etag");

// Security & rate limiting
app.use(helmet());
const limiter = rateLimit({ windowMs: 15 * 60 * 1000, max: 200 });
app.use(limiter);

// Core middleware
app.use(express.json());
app.use(
  cors({
    const allowed = (process.env.CORS_ORIGIN || process.env.CLIENT_ORIGIN || '')
  .split(',')
  .map(s => s.trim())
  .filter(Boolean);

app.use(cors({
  origin(origin, cb) {
    if (!origin) return cb(null, true);         // allow curl/postman
    return allowed.includes(origin) ? cb(null, true) : cb(new Error('CORS'));
  },
  credentials: true,
  methods: ['GET','POST','PUT','PATCH','DELETE','OPTIONS'],
  allowedHeaders: ['Content-Type','Authorization'],
}));
app.use(morgan(process.env.NODE_ENV === "production" ? "combined" : "dev"));
app.use((req, res, next) => {
  if (req.path.startsWith("/api/")) {
    res.set("Cache-Control", "no-store"); // don't cache at all
    res.set("Pragma", "no-cache");
    res.set("Expires", "0");
  }
  next();
});
// Optional: quick origin logger to help with CORS/debug
app.use((req, _res, next) => {
  if (process.env.NODE_ENV !== "production") {
    if (req.headers.origin) console.log("🌐 Request from origin:", req.headers.origin);
  }
  next();
});

// Health check
app.get("/", (_req, res) => {
  res.status(200).json({
    message: "API is running...",
    environment: process.env.NODE_ENV,
  });
});

// ---------- Routes ----------

// Auth routes (NO protect here so /api/auth/login works)
app.use("/api/auth", authRoutes);

// Agent routes (leave unprotected if they include /api/agent/login inside)
app.use("/api/agent", agentRoutes);

// Company-scoped routes (require user + company)
app.use("/api/bookings", bookingRoutes);
app.use("/api/inquiries", inquiryRoutes);

// Other routes (protect only if needed)
app.use("/api/analytics", analyticsRoutes);
// app.use("/api/pdf", pdfRoutes);

// 404 + Error handlers (MUST be last)
app.use(notFound);
app.use(errorHandler);

// Start server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(
    `Server running in ${process.env.NODE_ENV} mode on port ${PORT}`.bgMagenta.white
  );
});
